#!/usr/bin/env php
<?php
declare(strict_types=1);
error_reporting(-1);

foreach ([__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        define('PHPUNIT_COMPOSER_INSTALL', $file);
        break;
    }
}
if (defined('PHPUNIT_COMPOSER_INSTALL')) {
    require PHPUNIT_COMPOSER_INSTALL;
} else {
    exit(1);
}

use Psr\Log\LogLevel;

if (function_exists('posix_isatty') && posix_isatty(STDOUT)) {
    $baseLog = new SimpleLogger\Stdout();
} else {
    $baseLog = new SimpleLogger\File('server.log');
}
$baseLog->setLevel(LogLevel::INFO);
$log = new SimpleLogger\Logger();
$log->setLogger($baseLog);
$log->error('test');

set_error_handler(function($a, $b, $c, $d) {
    throw new \ErrorException($b, 0, $a, $c, $d);
}, -1);
set_exception_handler(function ($e) use ($log) {
    $log->error('err');
    $log->error((string) $e);
});
register_shutdown_function(function() use ($log) {
    $error = error_get_last();
    if (!$error) {
        $log->info('Exited with no error');
        return;
    }
    $log->error(json_encode($error));
});


$server = new Firehed\LSPHP\Server($log);
$server->addPlugin(new Firehed\LSPHP\Plugins\PHPLint());
$server->start();
